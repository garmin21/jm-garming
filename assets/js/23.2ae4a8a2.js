(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{599:function(s,t,a){"use strict";a.r(t);var n=a(10),p=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"_1、gulp-介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、gulp-介绍"}},[s._v("#")]),s._v(" 1、Gulp 介绍")]),s._v(" "),a("p",[s._v("Gulp 本身并不支持特定格式的文件，它只关心流 (Stream) 的处理。因此，您可以使用 Gulp 处理任何类型的文件，只需要使用适当的插件来解析或转换它们。\n例如，您可以使用 "),a("code",[s._v("gulp-sass")]),s._v(" 插件来编译 Sass 文件，使用 "),a("code",[s._v("gulp-typescript")]),s._v(" 插件来编译 TypeScript 文件，使用 "),a("code",[s._v("gulp-babel")]),s._v(" 插件来转换 ES6 语法等等。只要为您想要处理的文件类型选择合适的插件并配置适当的任务，Gulp 就能够处理它们。\n需要注意的是，Gulp 更擅长处理文本文件，如 HTML、CSS、JS、JSON 等，而不是二进制文件 (如图片、视频等)。对于后者，您可能需要使用其他工具来处理。")]),s._v(" "),a("h2",{attrs:{id:"_2、重要-api-介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、重要-api-介绍"}},[s._v("#")]),s._v(" 2、重要 API 介绍")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("gulp.task(name, [deps], fn)")]),s._v(" "),a("ul",[a("li",[s._v("=> 语法: gulp.task( '任务名称', 函数 )")]),s._v(" "),a("li",[s._v("=> 作用: 创建 一个 任务 , 函数内书写该任务需要执行的代码")]),s._v(" "),a("li",[s._v("=> 例子: gulp.task('cssHandler', ( ) => { 根据 gulp 的语法对 css 文件进行打包 })")])])]),s._v(" "),a("li",[a("p",[s._v("gulp.src(filePath/pathArr)")]),s._v(" "),a("ul",[a("li",[s._v("=> 语法: gulp.src( '路径地址' )")]),s._v(" "),a("li",[s._v("=> 作用: 标注源文件所在目录")]),s._v(" "),a("li",[s._v("=> 路径地址:")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("./src/css/a.css     指定找到某一个 css 文件\n./src/css/*.css     指定找到 css 目录下的所有 .css 结尾的文件\n./src/*/**          指定找到 src 目录下的所有文件\n./src/*/*.css       指定找到 src 目录下的所有文件夹内的所有 .css文件\n** /*               所有文件夹下的所有文件\n")])])]),a("ul",[a("li",[s._v("=> 返回值: gulp 任务流")])])]),s._v(" "),a("li",[a("p",[s._v("gulp.pipe(gulp 任务流)")]),s._v(" "),a("ul",[a("li",[s._v("=> 语法: 需要 gulp 任务流.pipe( 下一个工作内容 )")]),s._v(" "),a("li",[s._v("=> 作用: 管道函数 , 用来执行各项工作内容的")])])]),s._v(" "),a("li",[a("p",[s._v("gulp.dest(dirPath/pathArr)")]),s._v(" "),a("ul",[a("li",[s._v("=> 语法: gulp.dest( '路径' )")]),s._v(" "),a("li",[s._v("=> 作用: 把前面一个流传递来的内容放在指定目录文件夹下")])])]),s._v(" "),a("li",[a("p",[s._v("gulp.watch()")]),s._v(" "),a("ul",[a("li",[s._v("=> 语法: gulp.watch( 源'文件'路径, 任务名称 )")]),s._v(" "),a("li",[s._v("=> 作用: 监控 指定源文件, 只要文件发生任何改变, 就执行一遍 指定任务")])])]),s._v(" "),a("li",[a("p",[s._v("gulp.series()")]),s._v(" "),a("ul",[a("li",[s._v("=> 语法: gulp.series( 任务 1, 任务 2, 任务 3, ... )")]),s._v(" "),a("li",[s._v("=> 作用: "),a("strong",[s._v("串行")]),s._v(" 执行每一个任务")]),s._v(" "),a("li",[s._v("-> 前一个任务做完, 在做下一个任务")])])]),s._v(" "),a("li",[a("p",[s._v("gulp.parallel()")]),s._v(" "),a("ul",[a("li",[s._v("=> 语法: gulp.parallel( 任务 1, 任务 2, 任务 3, ... )")]),s._v(" "),a("li",[s._v("=> 作用: "),a("strong",[s._v("并行")]),s._v(" 开始每一个任务")]),s._v(" "),a("li",[s._v("-> 所有任务同时开始")])])])]),s._v(" "),a("h2",{attrs:{id:"_3、创建一个简单的应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、创建一个简单的应用"}},[s._v("#")]),s._v(" 3、创建一个简单的应用")]),s._v(" "),a("h3",{attrs:{id:"项目目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目目录"}},[s._v("#")]),s._v(" 项目目录")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("```\n|- dist\n|- build\n|- src\n  |- js\n  |- less\n|- index.html\n|- gulpfile.ts ----- gulp配置文件\n|- package.json\n```\n")])])]),a("h3",{attrs:{id:"安装-gulp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装-gulp"}},[s._v("#")]),s._v(" 安装 gulp")]),s._v(" "),a("ul",[a("li",[s._v("pnpm add gulp -D 局部安装")]),s._v(" "),a("li",[s._v("pnpm add @types/gulp -D gulp ts 类型支持")]),s._v(" "),a("li",[s._v("pnpm add sucrase -D gulp 默认是不支持 ES6 的语法，sucrase 默认提供了对 ES6 的语法 的转换")])]),s._v(" "),a("h3",{attrs:{id:"新增-gulpfile-ts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#新增-gulpfile-ts"}},[s._v("#")]),s._v(" 新增 "),a("code",[s._v("gulpfile.ts")])]),s._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//引入gulp模块")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" task"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" series "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'gulp'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//定义任务")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("task")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'任务名'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// TODO: 将你的任务的任务代码放在这， 运行一个任务可以通过 gulp [任务名] 执行")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//定义默认任务")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("task")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'default'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// or")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// series 串行")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("series")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 对sass文件做处理")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 把打包好的css输出到根目录的dist")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[s._v("在"),a("code",[s._v("package.json")]),s._v(" 中 新增打包命令")]),s._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"build"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"gulp"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// gulp default")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"build:css"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"gulp build:css"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// gulp build:css")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])])]),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[s._v("#")]),s._v(" 参考")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://www.gulpjs.com.cn/",target:"_blank",rel:"noopener noreferrer"}},[s._v("中文主页"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=p.exports}}]);