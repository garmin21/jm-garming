(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{672:function(t,a,s){"use strict";s.r(a);var n=s(10),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"前置知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前置知识"}},[t._v("#")]),t._v(" 前置知识")]),t._v(" "),s("h3",{attrs:{id:"作用域-作用域链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用域-作用域链"}},[t._v("#")]),t._v(" 作用域/作用域链")]),t._v(" "),s("p",[t._v("当 JavaScript 在运行的时候，它需要一些空间让它来存储本地变量（local variables）。我们将这些空间称为作用域对象（Scope object），有时候也称作 LexicalEnvironment。例如，当你调用函数时，函数定义了一些本地变量，这些变量就被存储在一个作用域对象中。你可以将作用域函数想象成一个普通的 JavaScript 对象，但是有一个很大的区别就是你不能够直接在 JavaScript 当中直接获取这个对象。你只可以修改这个对象的属性，但是你不能够获取这个对象的引用。")]),t._v(" "),s("p",[t._v("作用域对象是可以有父作用域对象（parent scope object）的。当代码试图访问一个变量的时候，解释器将在当前的作用域对象中查找这个属性。如果这个属性不存在，那么解释器就会在父作用域对象中查找这个属性。就这样，一直向父作用域对象查找，直到找到该属性或者再也没有父作用域对象。我们将这个查找变量的过程中所经过的作用域对象乘坐作用域链（Scope chain）。")]),t._v(" "),s("p",[t._v("在作用域链中查找变量的过程和原型继承（prototypal inheritance）有着非常相似之处。但是，非常不一样的地方在于，当你在原型链（prototype chain）中找不到一个属性的时候，并不会引发一个错误，而是会得到 undefined。但是如果你试图访问一个作用域链中不存在的属性的话，你就会得到一个 ReferenceError。")]),t._v(" "),s("p",[s("strong",[t._v("全局的变量会存储在全局的作用域对象中")]),t._v(" "),s("strong",[t._v("局部的变量会存储在局部的作用域对象中，如果发生嵌套，那么嵌套函数的 scope 会指向上一个函数的 scope 对象，这也是变量在查询时候，在当前作用域找，找不到就往全局找的原因")])]),t._v(" "),s("h2",{attrs:{id:"_1-如何理解闭包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-如何理解闭包"}},[t._v("#")]),t._v(" 1. 如何理解闭包？")]),t._v(" "),s("p",[t._v("javascript 代码的编译的过程中，作用域对象就已经被确认，不会变更，我们可以理解，每一个函数在定义的过程中，就会随身携带着一个 （Scope object）"),s("strong",[t._v("指向父作用域的作用域对象")]),t._v("，当将嵌套函数的引用返回时，其函数携带了父作用域的 "),s("strong",[t._v("作用域对象(一个存储空间)")]),t._v(" 在我们返回的函数，是可以访问到父作用域的变量，此时"),s("strong",[t._v("父作用域对象并没有被销毁，而是一直存在着")]),t._v(" 通过这种形式，就形成了一个闭包，一个不会被外部释放的作用域对象")]),t._v(" "),s("h2",{attrs:{id:"_2-闭包的常见形式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-闭包的常见形式"}},[t._v("#")]),t._v(" 2. 闭包的常见形式")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dome1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dome2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" count"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" dome2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dome1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dome2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"_3-闭包的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-闭包的作用"}},[t._v("#")]),t._v(" 3. 闭包的作用")]),t._v(" "),s("ol",[s("li",[t._v("模块化封装")]),t._v(" "),s("li",[t._v("私有化状态")]),t._v(" "),s("li",[t._v("科里化函数的应用")])]),t._v(" "),s("h2",{attrs:{id:"_4-如何销毁闭包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-如何销毁闭包"}},[t._v("#")]),t._v(" 4. 如何销毁闭包")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dome1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dome2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" count"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" dome2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dome1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ndome2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 销毁闭包")]),t._v("\n")])])]),s("h2",{attrs:{id:"_5-总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-总结"}},[t._v("#")]),t._v(" 5. 总结")]),t._v(" "),s("ul",[s("li",[t._v("什么是闭包？闭包就是同时含有对函数对象以及作用域对象引用的最想。实际上，所有 JavaScript 对象都是闭包。")]),t._v(" "),s("li",[t._v("闭包是什么时候被创建的？因为所有 JavaScript 对象都是闭包，因此，当你定义一个函数的时候，你就定义了一个闭包。")]),t._v(" "),s("li",[t._v("闭包是什么时候被销毁的？当它不被任何其他的对象引用的时候")])]),t._v(" "),s("h2",{attrs:{id:"_6-参考文章"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-参考文章"}},[t._v("#")]),t._v(" 6. 参考文章")]),t._v(" "),s("blockquote",[s("p",[t._v("发现 JavaScript 中闭包的强大威力: https://juejin.cn/post/6844903769646317576#heading-22")])]),t._v(" "),s("blockquote",[s("p",[t._v("JavaScript 闭包的底层运行机制: http://blog.leapoahead.com/2015/09/15/js-closure/")])]),t._v(" "),s("blockquote",[s("p",[t._v("我从来不理解 JavaScript 闭包: https://zhuanlan.zhihu.com/p/56490498")])]),t._v(" "),s("blockquote",[s("p",[t._v("从闭包说起: https://juejin.cn/post/6844903474212143117#heading-0")])])])}),[],!1,null,null,null);a.default=r.exports}}]);